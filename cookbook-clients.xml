<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
    "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
<!ENTITY % sharedents SYSTEM "shared-entities.xml" >
%sharedents;
]>
<chapter id="cb-clients">
  <title>&dcache; Clients.</title>

  <chapterinfo>
    <authorgroup>
      <author>
	<firstname>Owen</firstname>
	<surname>Synge</surname>
      </author>
    </authorgroup>
  </chapterinfo>

  <para>
    There are many client tools for &dcache;. These can most easily be
    classified by communication protocol.
  </para>

  <section id="cb-clients-gridftp">
    <title>&gsiftp;</title>

    <para>
      &dcache; provides a &gsiftp; door, which is in effect a
      &gsi; authenticated &ftp; access point to &dcache;
    </para>

    <section id="cb-clients-gridftp-ls">
      <title>Listing a directory</title>

      <para>
	To list the content of a &dcache; directory, the &gsiftp; protocol can be used;
      </para>

      <screen>&prompt-user; <userinput>edg-gridftp-ls gsiftp://gridftp-door.example.org/pnfs/example.org/data/dteam/</userinput></screen>
    </section>

      <section id="cb-clients-gridftp-exists">
        <title>Checking a file exists</title>

        <para>
          To check the existence of a file with &gsiftp;.
        </para>

        <screen>&prompt-user; <userinput>edg-gridftp-exists gsiftp://gridftp-door.example.org/pnfs/example.org/data/dteam/filler_test20050819130209790873000</userinput>
&prompt-user; <userinput>echo $?</userinput>
0
&prompt-user; <userinput>edg-gridftp-exists gsiftp://gridftp-door.example.org/pnfs/example.org/data/dteam/filler_test200508191302097908730002</userinput>
error the server sent an error response: 451 451 /pnfs/example.org/data/dteam/filler_test200508191302097908730002  not found
&prompt-user; <userinput>echo $?</userinput>
1</screen>

        <note>
	  <title>Use the return code</title>

	  <para>
	    Please note the <userinput>echo $?</userinput> show the
	    return code of the last run application. The error message
	    returned from the client this should not be scripted
	    against as it is one of many possible errors.
	  </para>
	</note>
      </section>

      <section id="cb-clients-gridftp-rm">
        <title>Deleting files</title>

        <para>
          To delete files with &gsiftp; use the <command>edg-gridftp-rm</command> command.
        </para>

        <screen>&prompt-user; <userinput>edg-gridftp-rm gsiftp://gridftp-door.example.org/pnfs/example.org/data/dteam/filler_test20050811160948926780000</userinput></screen>

        <para>
          This deletes the file
          <filename>filler_test20050811160948926780000</filename> from
          the <filename
          class="directory">/pnfs/example.org/data/dteam</filename>
          using the door running on the host <systemitem
          class="fqdomainname">gridftp-door.example.org</systemitem>
          within the &dcache; cluster <systemitem
          class="domainname">example.org</systemitem>
        </para>
      </section>

      <section id="cb-clients-gridftp-cp">
        <title>Copying files</title>

        <cmdsynopsis>
          globus-url-copy <arg>[command line options]</arg><arg><replaceable>srcUrl</replaceable></arg> <arg><replaceable>destinationUrl</replaceable></arg> ...
        </cmdsynopsis>

        <para>
          Copying file with <command>globus-url-copy</command> follows
          the syntax source, destination.
        </para>

        <informalexample>
	  <para>
	    The following example copies the file
	    <filename>/etc/group</filename> into &dcache; as the file
	    <filename>/pnfs/example.org/data/dteam/test_GlobusUrlCopy.clinton.504.22080.20071102160121.2</filename>
	  </para>

          <screen>&prompt-user; <userinput>globus-url-copy \
file://///etc/group \
gsiftp://gridftp-door.example.org/pnfs/example.org/data/dteam/test_GlobusUrlCopy.clinton.504.22080.20071102160121.2</userinput></screen>
          <para>Please note that the five slashes are really needed.</para>
        </informalexample>
      </section>
    </section>

    <section id="cb-clients-dcap">
      <title>&dcap;</title>

      <para>
	When using &prog-dccp; client or using the interposition
	library the errors <computeroutput>Command
	failed!</computeroutput> can be safely ignored.
      </para>

      <section id="cb-clients-dcap-dcc">
        <title>&prog-dccp;</title>

        <para>
          The following example shows &prog-dccp; being used to copy
          the file <filename>/etc/group</filename> into &dcache; as
          the the file
          <filename>/pnfs/example.org/data/dteam/test6</filename>.
          The &prog-dccp; program will connect to &dcache; without
          authenticating.
        </para>

        <screen>&prompt-user; <userinput>/opt/d-cache/dcap/bin/dccp /etc/group dcap://dcap-door.example.org:22125/pnfs/example.org/data/dteam/test6</userinput>
Command failed!
Server error message for [1]: "path /pnfs/example.org/data/dteam/test6 not found" (errno 10001).
597 bytes in 0 seconds</screen>

        <para>
          The following example shows &prog-dccp; being used to upload
          the file <filename>/etc/group</filename>.  In this example,
          &prog-dccp; will authenticate with &dcache; using the &gsi;
          protocol.
        </para>

        <screen>&prompt-user; <userinput>/opt/d-cache/dcap/bin/dccp /etc/group gsidcap://gsidcap-door.example.org:22128/pnfs/example.org/data/dteam/test5</userinput>
Command failed!
Server error message for [1]: "path /pnfs/example.org/data/dteam/test5 not found" (errno 10001).
597 bytes in 0 seconds</screen>

        <para>
          The following example shows &prog-dccp; with the debugging
          enabled.  The value <literal>63</literal> controls how much
          information is displayed.
        </para>

        <screen>&prompt-user; <userinput>/opt/d-cache/dcap/bin/dccp -d 63   /etc/group dcap://dcap-door.example.org:22128/pnfs/example.org/data/dteam/test3</userinput>
Dcap Version version-1-2-42 Jul 10 2007 19:56:02
Using system native stat64 for /etc/group.
Allocated message queues 0, used 0

Using environment variable as configuration
Allocated message queues 1, used 1

Creating a new control connection to dcap-door.example.org:22128.
Activating IO tunnel. Provider: [libgsiTunnel.so].
Added IO tunneling plugin libgsiTunnel.so for dcap-door.example.org:22128.
Setting IO timeout to 20 seconds.
Connected in 0.00s.
Removing IO timeout handler.
Sending control message: 0 0 client hello 0 0 2 42 -uid=501 -pid=32253 -gid=501
Server reply: welcome.
dcap_pool:  POLLIN on control line [3] id=1
Connected to dcap-door.example.org:22128
Sending control message: 1 0 client stat "dcap://dcap-door.example.org:22128/pnfs/example.org/data/dteam/test3" -uid=501
Command failed!
Server error message for [1]: "path //pnfs/example.org/data/dteam/test3 not found" (errno 10001).
[-1] unpluging node
Removing unneeded queue [1]
[-1] destroing node
Real file name: /etc/group.
Using system native open for /etc/group.
extra option:  -alloc-size=597
[Fri Sep  7 17:50:56 2007] Going to open file dcap://dcap-door.example.org:22128/pnfs/example.org/data/dteam/test3 in cache.
Allocated message queues 2, used 1

Using environment variable as configuration
Activating IO tunnel. Provider: [libgsiTunnel.so].
Added IO tunneling plugin libgsiTunnel.so for dcap-door.example.org:22128.
Using existing control connection to dcap-door.example.org:22128.
Setting hostname to dcap-door.example.org.
Sending control message: 2 0 client open "dcap://dcap-door.example.org:22128/pnfs/example.org/data/dteam/test3" w -mode=0644 -truncate dcap-door.example.org 33122 -timeout=-
1 -onerror=default  -alloc-size=597  -uid=501
Polling data for destination[6] queueID[2].
Got callback connection from dcap-door.example.org:35905 for session 2, myID 2.
cache_open -> OK
Enabling checksumming on write.
Cache open succeeded in 0.62s.
[7] Sending IOCMD_WRITE.
Entered sendDataMessage.
Polling data for destination[7] queueID[2].
[7] Got reply 4x12 bytes len.
[7] Reply: code[6] response[1] result[0].
get_reply: no special fields defined for that type of response.
[7] Got reply 4x12 bytes len.
[7] Reply: code[7] response[1] result[0].
get_reply: no special fields defined for that type of response.
[7] Expected position: 597 @ 597 bytes written.
Using system native close for [5].
[7] unpluging node
File checksum is: 460898156
Sending CLOSE for fd:7 ID:2.
Setting IO timeout to 300 seconds.
Entered sendDataMessage.
Polling data for destination[7] queueID[2].
[7] Got reply 4x12 bytes len.
[7] Reply: code[6] response[4] result[0].
get_reply: no special fields defined for that type of response.
Server reply: ok destination [2].
Removing IO timeout handler.
Removing unneeded queue [2]
[7] destroing node
597 bytes in 0 seconds
Debugging</screen>
      </section>

      <section id="cb-clients-dcap-interposition">
        <title>Using the &dcache; client interposition library.</title>

        <tip>
          <title>Finding the &gsi; tunnel.</title>

          <para>
            When the <envar>LD_PRELOAD</envar> library
            <literal>libpdcap.so</literal> variable produces errors
            finding the &gsi; tunnel it can be useful to specify the
            location of the &gsi; tunnel library directly using the
            following command:
	  </para>

	  <screen>&prompt-user; <userinput>export
DCACHE_IO_TUNNEL=/opt/d-cache/dcap/lib/libgsiTunnel.so</userinput></screen>

          <para>
	    Please see <ulink
	    url="http://www.dcache.org/manuals/experts_docs/tunnel-HOWTO.html"/>
	    for further details on tunnel setup for the server.
          </para>
        </tip>

        <para>
          &dcap; is a <acronym>POSIX</acronym> like interface for
          accessing &dcache;, allowing unmodified applications to
          access &dcache; transparently. This access method uses a
          proprietary data transfer protocol, which can emulate
          <acronym>POSIX</acronym> access across the
          <acronym>LAN</acronym> or <acronym>WAN</acronym>.
        </para>

        <para>
          Unfortunately the client requires inbound connectivity and
          so it is not practical to use this protocol over the
          <acronym>WAN</acronym> as most sites will not allow inbound
          connectivity to worker nodes.
        </para>

        <para>
          To make non &dcache; aware applications access files within
          &dcache; through &dcap; all that is needed is set the
          <envar>LD_PRELOAD</envar> environment variable to
          <literal>/opt/d-cache/dcap/lib/libpdcap.so</literal>.
        </para>

        <screen>&prompt-user; <userinput>export LD_PRELOAD=/opt/d-cache/dcap/lib/libpdcap.so</userinput></screen>

        <para>
          Setting the <envar>LD_PRELOAD</envar> environment variable
          results in the library <filename>libpdcap.so</filename>
          overriding the operating system calls.  After setting this
          environment variable, the standard shell command should work
          with &dcap; and &gsidcap; &url;s.
        </para>

	<informalexample>
	  <para>
	    The following session demonstrates copying a file into
	    &dcache;, checking the file is present with the
	    <command>ls</command> command, reading the first 3 lines
	    from &dcache; and finally deleting the file.
	  </para>

	  <screen>&prompt-user; <userinput>cp /etc/group gsidcap://gsidcap-door.example.org:22128/pnfs/example.org/data/dteam/myFile</userinput>
&prompt-user; <userinput>ls gsidcap://gsidcap-door.example.org:22128/pnfs/example.org/data/dteam/DirOrFile</userinput>
&prompt-user; <userinput>head -3 gsidcap://gsidcap-door.example.org:22128/pnfs/example.org/data/dteam/myFile</userinput>
root:x:0:
daemon:x:1:
bin:x:2:
&prompt-user; <userinput>rm gsidcap://gsidcap-door.example.org:22128/pnfs/example.org/data/dteam/MyFile</userinput></screen>
	</informalexample>

      </section>
    </section>

    <section id="cb-clients-srm">
      <title>&srm;</title>

      <para>
        &dcache; provides a series of clients one of which is the
        &srm; client which supports a large number operations, but is
        just one Java application, the script name is sent to the Java
        applications command line to invoke each operation.
      </para>

      <para>
	This page just shows the scripts command line and not the
	invocation of the Java application directly.
      </para>

      <section id="cb-clients-srm-mkdir">
        <title>Creating a new directory.</title>

        <para>Usage:</para>

        <cmdsynopsis>
            srmmkdir <arg>[command line options]</arg> <arg><replaceable>srmUrl</replaceable></arg>
        </cmdsynopsis>

        <para>Example:</para>

        <informalexample>
	  <para>
	    The following example creates the directory <filename
	    class="directory">/pnfs/example.org/data/dteam/myDir</filename>.
	  </para>

          <screen>&prompt-user; <userinput>srmmkdir srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/myDir</userinput></screen>
        </informalexample>
      </section>

      <section id="cb-clients-srm-rm">
        <title>Removing files from &dcache;</title>

        <para>Usage:</para>
        <cmdsynopsis>
           srmrm  <arg>[command line options]</arg><arg><replaceable>srmUrl</replaceable> ...</arg>
        </cmdsynopsis>

        <informalexample>
          <screen>&prompt-user; <userinput>srmrm srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/myDir/myFile</userinput></screen>
        </informalexample>
      </section>

      <section id="cb-clients-srm-rmdir">
        <title>Removing empty directories from &dcache;</title>

        <para>
	  It is allowed to remove only empty directories as well as
	  trees of empty directories.
	</para>

        <para>Usage:</para>

        <cmdsynopsis>
           srmrmdir <arg>command line options</arg><arg><replaceable>srmUrl</replaceable></arg>
        </cmdsynopsis>

        <para>Examples:</para>
        <informalexample>
          <screen>&prompt-user; <userinput>srmrmdir srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/myDir</userinput></screen>
        </informalexample>
        <informalexample>
          <screen>&prompt-user; <userinput>srmrmdir -recursive=true srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/myDir</userinput></screen>
        </informalexample>
      </section>

      <section id="cb-clients-srm-1-cp">
        <title>srmcp for &srm; v1</title>

        <para>Usage:</para>

        <cmdsynopsis>
          srmcp <arg>command line options</arg> <arg rep='repeat' choice='plain'><replaceable>source</replaceable></arg> <arg><replaceable>destination</replaceable></arg>
        </cmdsynopsis>

        <para>or</para>

        <cmdsynopsis>
          srmcp <arg>command line options</arg> <arg>-copyjobfile</arg> <arg choice='plain'><replaceable>file</replaceable></arg>
        </cmdsynopsis>

        <section id="cb-clients-srm-1-cp-to">
          <title>Copying files to &dcache;</title>

          <informalexample>
            <screen>&prompt-user; <userinput>srmcp -webservice_protocol=http \
   file://///etc/group \
   srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/test_Srm.clinton.501.32050.20070907153055.0</userinput></screen>
          </informalexample>
        </section>

        <section id="cb-clients-srm-1-cp-from">
          <title>Copying files from &dcache;</title>
          <screen>&prompt-user; <userinput>srmcp -webservice_protocol=http \
   srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/test_Srm.clinton.501.32050.20070907153055.0 \
   file://///tmp/testfile1 -streams_num=1</userinput></screen>
        </section>
      </section>

      <section id="cb-clients-srm-2">
        <title>srmcp for &srm; v2.2</title>

	<section id="cb-clients-srm-ping">
          <title>Getting the &dcache; Version</title>

          <para>
            The <command>srmping</command> command will tell you the
            version of &dcache;.  This only works for authorized users
            and not just authenticated users.
          </para>

          <screen>&prompt-user; <userinput>srmping -2 srm://srm-door.example.org:8443/pnfs</userinput>
WARNING: SRM_PATH is defined, which might cause a wrong version of srm client to be executed
WARNING: SRM_PATH=/opt/d-cache/srm
VersionInfo : v2.2
backend_type:dCache
backend_version:production-1-9-1-11</screen>
        </section>

        <section id="cb-clients-srm-st">
          <title>Space Tokens</title>

          <para>
            Space token support must be set up and reserving space
            with the admin interface this is also documented <link
            linkend="cf-srm-intro">in the &srm; section</link> and in
<!-- FIXME: reference to wiki from Book -->
            <ulink
            url="http://trac.dcache.org/projects/dcache/wiki/manuals/SRM_2.2_Setup">the
            &dcache; wiki</ulink>.
          </para>

          <section id="cb-clients-srm-st-ls">
            <title>Space Token Listing</title>

            <para>Usage:</para>
            <cmdsynopsis>get-space-tokens <arg>command line options</arg> <arg><replaceable>srmUrl</replaceable></arg></cmdsynopsis>

            <example>
              <title>surveying the space tokens available in a directory.</title>

              <screen>&prompt-user; <userinput>srm-get-space-tokens srm://srm-door.example.org:8443/pnfs/example.org/data/dteam -srm_protocol_version=2</userinput></screen>

              <para>A successful result:</para>

              <screen>return status code : SRM_SUCCESS
return status expl. : OK
Space Reservation Tokens:
148241
148311
148317
28839
148253
148227
148229
148289
148231
148352</screen>
            </example>

            <example>
              <title>Listing the space tokens for a &srm;:</title>

              <screen>&prompt-user; <userinput>srm-get-space-tokens srm://srm-door.example.org:8443</userinput>
Space Reservation Tokens:
145614
145615
144248
144249
25099
145585
145607
28839
145589</screen>
            </example>
          </section>

          <section id="cb-clients-srm-st-reserve">
            <title>Space Reservation</title>

            <para>Usage:</para>
            <cmdsynopsis>
              srm-reserve-space <arg>[command line options]</arg><arg><replaceable>srmUrl</replaceable></arg>
            </cmdsynopsis>

            <screen>&prompt-user; <userinput>srm-reserve-space  \
-desired_size 2000 \
-srm_protocol_version=2 \
-retention_policy=REPLICA \
-access_latency=ONLINE \
-guaranteed_size 1024 \
-lifetime 36000 \
srm://srm-door.example.org:8443/pnfs/example.org/data/dteam</userinput></screen>

            <para>A successful result:</para>
            <screen>Space token =144573</screen>

            <para>A typical failure</para>

            <screen>SRMClientV2 : srmStatusOfReserveSpaceRequest , contacting service httpg://srm-door.example.org:8443/srm/managerv2
status: code=SRM_NO_FREE_SPACE explanantion= at Thu Nov 08 15:29:44 CET 2007 state Failed :  no space available
lifetime = null
access latency = ONLINE
retention policy = REPLICA
guaranteed size = null
total size = 34</screen>

            <para>
	      Also you can get info for this space token
	      <literal>144573</literal>:
	    </para>

            <screen>&prompt-user; <userinput>srm-get-space-metadata srm://srm-door.example.org:8443/pnfs/example.org/data/dteam -space_tokens=144573</userinput></screen>

            <para>Possible result:</para>

            <screen>Space Reservation with token=120047
                   owner:VoGroup=/dteam VoRole=NULL
               totalSize:1024
          guaranteedSize:1024
              unusedSize:1024
        lifetimeAssigned:36000
            lifetimeLeft:25071
           accessLatency:ONLINE
         retentionPolicy:REPLICA</screen>
          </section>

          <section id="cb-clients-srm-st-write">
            <title>Writing to a Space Token</title>

            <para>Usage: srmcp [command line options] source(s) destination</para>

            <para>Examples:</para>
            <screen>&prompt-user; <userinput>srmcp -protocols=gsiftp -space_token=144573 \
file://///home/user/path/to/myFile \
srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/myFile</userinput></screen>

            <screen>&prompt-user; <userinput>srmcp -protocols=gsiftp -space_token=144573 \
file://///home/user/path/to/myFile1 \
file://///home/user/path/to/myFile2 \
srm://srm-door.example.org:8443/pnfs/example.org/data/dteam</userinput></screen>
          </section>

          <section id="cb-clients-srm-st-metadata">
            <title>Space Metadata</title>

            <para>
              Users can get the metadata available for the space, but
              the ability to query the metadata of a space reservation
              may be restricted so that only certain users can obtain
              this information.
            </para>

            <screen>&prompt-user; <userinput>srm-get-space-metadata srm://srm-door.example.org:8443/pnfs/example.org/data/dteam -space_tokens=120049
WARNING: SRM_PATH is defined, which might cause a wrong version of srm client to be executed
WARNING: SRM_PATH=/opt/d-cache/srm</userinput>
Space Reservation with token=120049
                   owner:VoGroup=/dteam VoRole=NULL
               totalSize:1024
          guaranteedSize:1024
              unusedSize:1024
        lifetimeAssigned:36000
            lifetimeLeft:30204
           accessLatency:ONLINE
         retentionPolicy:REPLICA</screen>
          </section>

          <section id="cb-clients-srm-st-strm">
            <title>Space Token Release</title>

            <para>
	      Removes a space token from the &srm;.
	    </para>

            <screen>&prompt-user; <userinput>srm-release-space srm://srm-door.example.org:8443 -space_token=15</userinput></screen>
          </section>
        </section>

        <section id="cb-clients-srm-2-ls">
          <title>Listing a file in &srm;</title>
          <para>
	    &srm; version 2.2 has a much richer set of file listing
	    commands.
	  </para>
          <para>
	    Usage:
          </para>
          <cmdsynopsis>
            srmls <arg>command line options</arg> <arg choice='plain' rep='repeat'><replaceable>srmUrl</replaceable></arg>
          </cmdsynopsis>

          <example>
	    <title>Using <userinput>srmls -l</userinput>:</title>
	    <screen>&prompt-user; <userinput>srmls srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/testdir  -2</userinput>
  0 /pnfs/example.org/data/dteam/testdir/
      31 /pnfs/example.org/data/dteam/testdir/testFile1
      31 /pnfs/example.org/data/dteam/testdir/testFile2
      31 /pnfs/example.org/data/dteam/testdir/testFile3
      31 /pnfs/example.org/data/dteam/testdir/testFile4
      31 /pnfs/example.org/data/dteam/testdir/testFile5</screen>
          </example>

          <note>
	    <para>
	      The <option>-l</option> option results in
	      <command>srmls</command> providing additional
	      information.  Collecting this additional information may
	      result in a dramatic increase in execution time.
	    </para>
          </note>

          <example>
            <title>Using <userinput>srmls -l</userinput>:</title>

	    <screen>&prompt-user; <userinput>srmls -l srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/testdir -2</userinput>
  0 /pnfs/example.org/data/dteam/testdir/
  storage type:PERMANENT
  retention policy:CUSTODIAL
  access latency:NEARLINE
  locality:NEARLINE
 locality: null
   UserPermission: uid=18118 PermissionsRWX
   GroupPermission: gid=2688 PermissionsRWX
  WorldPermission: RX
 created at:2007/10/31 16:16:32
 modified at:2007/11/08 18:03:39
   - Assigned lifetime (in seconds):  -1
  - Lifetime left (in seconds):  -1
  - Original SURL:  /pnfs/example.org/data/dteam/testdir
 - Status:  null
 - Type:  DIRECTORY
      31 /pnfs/example.org/data/dteam/testdir/testFile1
      storage type:PERMANENT
      retention policy:CUSTODIAL
      access latency:NEARLINE
      locality:NEARLINE
      - Checksum value:  84d007af
      - Checksum type:  adler32
       UserPermission: uid=18118 PermissionsRW
       GroupPermission: gid=2688 PermissionsR
      WorldPermission: R
     created at:2007/11/08 15:47:13
     modified at:2007/11/08 15:47:13
       - Assigned lifetime (in seconds):  -1
      - Lifetime left (in seconds):  -1
      - Original SURL:  /pnfs/example.org/data/dteam/testdir/testFile1
 - Status:  null
 - Type:  FILE</screen>
          </example>

	  <para>
	    If you have more than 1000 entries in your directory then
	    &dcache; will return only the first 1000.  To view
	    directories with more than 1000 entries, please use the
	    following parameters:
	  </para>

	  <variablelist>
	    <title>srmls parameters</title>
	    <varlistentry><term>-count=<replaceable>integer</replaceable></term>
            <listitem>
              <para>
                The number of entries to report.
              </para>
            </listitem>
	    </varlistentry>
	    <varlistentry><term>-offset=<replaceable>integer</replaceable></term>
            <para>
              Offset to start number of entries to report. The default
              value is <literal>0</literal>.
            </para>
	    </varlistentry>
	  </variablelist>

	  <example>
	    <title>Limited directory listing</title>

            <para>
	      The first command shows the output without specifying
	      <option>-count</option> or <option>-offset</option>.
	      Since the directory contains less than 1000 entries, all
	      entries are listed.
	    </para>

         <screen>&prompt-user; <userinput>srmls srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/dir1 \
srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/dir2</userinput>
  0 /pnfs/example.org/data/dteam/dir1/
      31 /pnfs/example.org/data/dteam/dir1/myFile1
      28 /pnfs/example.org/data/dteam/dir1/myFile2
      47 /pnfs/example.org/data/dteam/dir1/myFile3
  0 /pnfs/example.org/data/dteam/dir2/
      25 /pnfs/example.org/data/dteam/dir2/fileA
      59 /pnfs/example.org/data/dteam/dir2/fileB</screen>

	    <para>
	      The following examples shows the result when using the
	      <option>-count</option> option to listing the first
	      three entries.
	    </para>

	    <screen>&prompt-user; <userinput>srmls -count=3 srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/testdir  -srm_protocol_version=2</userinput>
0 /pnfs/example.org/data/dteam/testdir/
      31 /pnfs/example.org/data/dteam/testdir/testFile1
      31 /pnfs/example.org/data/dteam/testdir/testFile2
      31 /pnfs/example.org/data/dteam/testdir/testFile3</screen>

            <para>
	      In the next command, the <option>-offset</option> option
	      is used to view a different set of entries.
	    </para>

            <screen>&prompt-user; <userinput>srmls -count=3 -offset=1 srm://srm-door.example.org:8443/pnfs/example.org/data/dteam/testdir  -srm_protocol_version=2</userinput>
0 /pnfs/example.org/data/dteam/testdir/
      31 /pnfs/example.org/data/dteam/testdir/testFile2
      31 /pnfs/example.org/data/dteam/testdir/testFile3
      31 /pnfs/example.org/data/dteam/testdir/testFile4</screen>
	  </example>
	</section>
      </section>
    </section>

    <section id="cb-clients-ldap">
      <title>ldap</title>

      <para>&dcache; is commonly deployed with the BDII. The information provider within &dcache;
        publishes information to BDII. To querying the &dcache; BDII is a matter of using the
        standard command ldapsearch. For grid the standard ldap port is set to 2170 from the
        previous value of 2135.
      </para>

      <screen>&prompt-user; <userinput>ldapsearch -x -H ldap://localhost:2170 -b mds-vo-name=resource,o=grid > /tmp/ldap.output.ldif</userinput>
&prompt-user; <userinput>wc -l  /tmp/ldap.output.ldif</userinput>
205 /tmp/ldap.output.ldif</screen>

    </section>

    <para>
      As can be seen from above even a single node standard install of
      &dcache; returns a considerable number of lines and for this
      reason we have not included the output, in this case 205 lines
      where written.
    </para>

    <section id="cb-clients-lcg">
      <title>Using the <acronym>LCG</acronym> commands with &dcache;</title>

      <para>
        The <literal>lcg_util</literal> <acronym>RPM</acronym>
        contains many small command line applications which interact
        with &srm; implementations, these where developed
        independently from &dcache; and provided by the
        <acronym>LCG</acronym> grid computing effort.
      </para>

      <para>
        Each command line application operates on a different method
        of the &srm; interface.  These applications where not designed
        for normal use but to provide components upon which operations
        can be built.
      </para>

      <para>
        <command>lcg-gt</command> queries the <acronym>BDII</acronym>
        information server. This adds an additional requirement that
        the <acronym>BDII</acronym> information server can be found by
        <command>lcg-gt</command>, please only attempt to contact
        servers found on your user interface using.
      </para>

      <screen>&prompt-user; <userinput>lcg-infosites --vo dteam se</userinput></screen>
      <section id="cb-clients-lcg-gt">
        <title>The <command>lcg-gt</command> Application</title>
        <para>
          &srm; provides a protocol negotiating interface, and returns
          a &turl; (transfer &url;).  The protocol specified by the
          client will be returned by the server if the server supports
          the requested protocol.
        </para>
        <para>
          To read a file from &dcache; using <command>lcg-gt</command>
          you must specify two parameters the &surl; (storage &url;),
          and the protcol (&gsidcap; or &gsiftp;) you wish to use to
          access the file.
        </para>

        <screen>&prompt-user; <userinput>lcg-gt srm://srm-door.example.org/pnfs/example.org/data/dteam/group gsidcap</userinput>
gsidcap://gsidcap-door.example.org:22128/pnfs/example.org/data/dteam/group
-2147365977
-2147365976</screen>

        <para>
          Each of the above three lines contains different
          information. These are explained below.
        </para>

	<para>
	  <literal>gsidcap://gsidcap-door.example.org:22128/pnfs/example.org/data/dteam/group</literal>
	  is the transfer &url; (&turl;).
	</para>

	<para>
	  <literal>-2147365977</literal> is the &srm; <literal>Request
	  Id</literal>, Please note that it is a negative number in
	  this example, which is allowed by the specification.
        </para>

	<para>
	  <literal>-2147365976</literal> is the Unique identifier for
	  the file with respect to the <literal>Request
	  Id</literal>. Please note that with this example this is a
	  negative number.
        </para>

	<important>
          <title>Remember to return your <literal>Request Id</literal></title>

          <para>
            &dcache; limits the number of <literal>Request
            Id</literal>s a user may have.  All <litearl>Request
            Id</litearl>s should be returned to &dcache; using the
            command <command>lcg-sd</command>.
	  </para>
	</important>

	<para>
	  If you use <command>lcg-gt</command> to request a file with
	  a protocol that is not supported by &dcache; the command
	  will block for some time as &dcache;'s &srm; interface times
	  out after approximately 10 minutes.
	</para>
      </section>

      <section id="cb-clients-lcg-sd">
        <title>The <command>lcg-sd</command> Application</title>

        <para>
          This command should be used to return any &turl;s given by
          &dcache;'s &srm; interface.  This is because &dcache;
          provides a limited number of &turl;s available concurrently.
        </para>

        <para>
          <command>lcg-sd</command> takes four parameters: the &surl;,
          the <literal>Request Id</literal>, the <literal>File
          Id</literal> with respect to the <literal>Request
          Id</literal>, and the direction of data transfer.
	</para>

	<para>
	  The following example is to complete the get operation, the
	  values are taken form the above example of
	  <command>lcg-gt</command>.
        </para>

        <screen>&prompt-user; <userinput>lcg-sd srm://srm-door.example.org:22128/pnfs/example.org/data/dteam/group " -2147365977" " -2147365976" 0</userinput></screen>

	<note>
	  <title>Negative numbers</title>

	  <para>
	    &dcache; returns negative numbers for <literal>Request
	    Id</literal> and <literal>File Id</literal>.  Please note
	    that <command>lcg-sd</command> requires that these values
	    are places in double-quotes with a single space before the
	    <literal>-</literal> sign.
	  </para>
	</note>

	<para>
	  The <literal>Request Id</literal> is one of the values
	  returned by the <command>lcg-gt</command> command.  In this
	  example, the value (<literal>-2147365977</literal>) comes
	  from the above example <command>lcg-gt</command>.
	</para>

	<para>
	  The <literal>File Id</literal> is also one of the values
	  returned returned by the <command>lcg-gt</command> command.
	  In this example, the value (<literal>-2147365976</literal>)
	  comes from the above example <command>lcg-gt</command>.
	</para>

	<para>
	  The direction parameter indicates in which direction data
	  was transferred: <literal>0</literal> for reading data and
	  <literal>1</literal> for writing data.
	</para>
      </section>
    </section>
</chapter>
