<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">     

<chapter id="cb-general">
  <title>General</title>
  
  <section id="cb-general-opteron">
    <title>Installing dCache on Opteron Machines</title>
    
    <para>
      The PNFS server, dCache server, and dCache client software
      have to be taken care of:
    </para>
    
    <section id="cb-general-opteron-server">
      <title>The dCache Server</title>
      
      <para>
        The major part of the dCache server softwar is written in
        Java. Therefore the Java Virtual Machine with 64 bit
        extension needs to be installed. It either is included in
        the regular Java distribution or additional packages have to
        be downloaded.
      </para>
      
    </section>
    
    <section id="cb-general-opteron-client">
      <title>The dCache Client</title>
      
      <para>
        The <glossterm id="gl-dcap-library">dCap library</glossterm>
        and the command line tool <command>dccp</command> may be
        downloaded from <ulink
	  url="http://www.dcache.org/downloads.shtml">
	  http://www.dcache.org/downloads/</ulink> for several
        architectures. The source of the client software may also be
        downloaded from <ulink
	  url="http://www.dcache.org/downloads/cvs.shtml">
	  http://www.dcache.org/downloads/cvs.shtml</ulink> and
        compiled. As of this writing, this has not been tested for
        the Opteron architecture. Please, contact
        <email>support@dcache.org</email> when encountering any
        problems with this.
      </para>
      
    </section>
    
    <section id="cb-general-opteron-pnfs">
      <title>PNFS Server</title>
      
      <para>
        The current version of the PNFS server software is written
        in C and has never been compiled for any 64-bit
        architecture. Since a Java implementation is in preparation,
        there are no plans to do that. Therefore the PNFS server has
        to be run in compat mode.
      </para>
      
    </section>
    
  </section>

  <section id="cb-general-lcg">
    <title>Using <dcache/> as an LCG Storage Element</title>

    <para>
      <dcache/> is turned into an LCG Storage Element by making it
      publish into the LCG information system. From version 1.6.6
      release 2 on, this can be done with the new info provider as
      follows.
    </para>

    <para>
      We assume that a running Globus MDS system is installed as
      provided by the generic installation procedure of the LCG
      software (see <ulink
      url="http://lcg.web.cern.ch/LCG/Sites/releases.html"></ulink>).
    </para>

    <para>
      The actual compilation of static and dynamic information and
      publication into the LCG information system is done by the
      generic information provider (GIP). The new <dcache/> info
      provider requires version 1.0.22 of GIP. The RPM can be found at

<ulink url="http://lfield.home.cern.ch/lfield/gip/rpms/lcg-info-generic-1.0.22-1.noarch.rpm">http://lfield.home.cern.ch/lfield/gip/rpms/lcg-info-generic-1.0.22-1.noarch.rpm</ulink>.

      You will also need

      <ulink url="http://lfield.home.cern.ch/lfield/gip/rpms/lcg-info-templates-1.0.14-1.noarch.rpm">http://lfield.home.cern.ch/lfield/gip/rpms/lcg-info-templates-1.0.14-1.noarch.rpm</ulink>. The tutorial

<ulink url="http://lfield.home.cern.ch/lfield/cgi-bin/wiki.cgi?area=gip&amp;page=tutorial">http://lfield.home.cern.ch/lfield/cgi-bin/wiki.cgi?area=gip&amp;page=tutorial</ulink>

      describes how to configure it, though most people will use the
      LCG generic installation method YAIM for that.
    </para>

    <para>
      If you want to do it manually, though, you have to create the
      static file in <filename
      class="directory">/opt/lcg/var/gip/ldif/</filename> as described
      on that page (and below for your convenence) and issue

<screen><rootprompt/>ln -s /opt/d-cache/jobs/infoDynamicSE-plugin-dcache /opt/lcg/var/gip/plugin/
<rootprompt/>ln -s /opt/d-cache/jobs/infoDynamicSE-provider-dcache /opt/lcg/var/gip/provider/</screen>
    </para>

    <para>
      The new info provider associates to each VO (as given in the
      static file) a pool group with the same name. The values for
      available and used space per VO are determined by the values for
      these pool groups. To create a pool group
      <replaceable>voName</replaceable> and add a pool
      <replaceable>voPool</replaceable> to it, use the admin interface
      and issue the following commands in the pool manager:

<screen><dcpmprompt/><command>psu create pgroup</command> <replaceable>voName</replaceable>
<dcpmprompt/><command>psu addto pgroup</command> <replaceable>voName</replaceable> <replaceable>voPool</replaceable></screen>

      The actual usage of the pools might differ according to the
      configuration of the pool selection unit (see <xref
      linkend="cf-pm-psu"/> for details on that).
    </para>

    <para>
      The static ldif file may be generated by editing
      <filename>/opt/lcg/share/doc/lcg-info-templates/lcg-info-static-se.conf</filename>
      according to your needs and running

<screen><rootprompt/>/opt/lcg/sbin/lcg-info-static-create -c /opt/lcg/share/doc/lcg-info-templates/lcg-info-static-se.conf \
-t /opt/lcg/etc/GlueSE.template > /opt/lcg/var/gip/ldif/lcg-info-static-se.ldif</screen>

    </para>

    <para>
      Globus MDS is configured to use the new GIP by changing
      <filename>/opt/lcg/libexec/lcg-info-wrapper</filename> to read

<programlisting>#!/bin/sh
export LANG=C
/opt/lcg/bin/lcg-info-generic /opt/lcg/etc/lcg-info-generic.conf</programlisting>

    </para>

  </section>
  
</chapter>
